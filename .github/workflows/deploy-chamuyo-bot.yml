name: Deploy chamuyo-bot Lambda Function

on:
  push:
    branches:
      - main
    paths:
      - '**.py'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2 

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install openai requests aiohttp boto3 pytest pytest-mock moto
        
    - name: Set AWS Region
      run: echo "AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV

    # - name: Run Pytest
    #   run: |
    #     pytest -v
        
    - name: Setup AWS CLI
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Print changed files
      run: |
        echo "List of changed files:" 
        echo $(git diff --name-only HEAD^ HEAD)

    - name: Deploy Modified Files
      run: |
        # Constants
        S3_BUCKET=chamuyo-bot
        S3_KEY=lambda_package.zip
        LAMBDA_FUNCTION_NAME=chamuyo-bot

        # Download the existing zip from S3
        aws s3 cp s3://$S3_BUCKET/$S3_KEY existing_lambda.zip

        # Unzip the existing package
        unzip existing_lambda.zip -d lambda_env

        # Copy only the modified .py files from the commit into the unzipped directory
        # This will maintain their directory structure.
        for file in $(git diff --name-only HEAD^ HEAD); do
            if [[ $file == *".py" ]]; then
                # Create the directory structure in lambda_env for the modified file
                mkdir -p lambda_env/$(dirname $file)
                # Copy the modified file
                cp $file lambda_env/$file
                # Print what you've done with the file
                echo "Copied $file to lambda_env/$file"
                echo "Content of $file after copying:"
                cat lambda_env/$file
            fi
        done

        # Zip the directory again
        cd lambda_env
        zip -r ../updated_lambda.zip .
        cd ..

        # Upload the updated zip to S3
        aws s3 cp updated_lambda.zip s3://$S3_BUCKET/$S3_KEY

        # Update Lambda function code
        aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --s3-bucket $S3_BUCKET --s3-key $S3_KEY

        # Cleanup
        rm -r lambda_env
        rm existing_lambda.zip updated_lambda.zip
